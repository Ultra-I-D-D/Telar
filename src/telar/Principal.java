/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telar;

import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.awt.Component;
import static java.lang.Thread.sleep;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author Ruso
 */
public class Principal extends javax.swing.JFrame {

    //Crea el objeto arduino
    PanamaHitek_Arduino ino = new PanamaHitek_Arduino();

    //Crea el listener para escuchar lo enviado desde arduino
    SerialPortEventListener listener = new SerialPortEventListener() {
        @Override
        public void serialEvent(SerialPortEvent spe) {
            try {
                if (ino.isMessageAvailable()) {

                    log(ino.printMessage());
                    //System.out.println(ino.printMessage());
                }
            } catch (SerialPortException ex) {
                log("Error de Lectura: " + ex.toString());
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ArduinoException ex) {
                log("Error de Lectura: " + ex.toString());
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

    public void log(String log) {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        String hora = dateFormat.format(date);
        String texto = this.jTextAreaLOg.getText();
        this.jTextAreaLOg.setText(texto+"-" + hora + ":" + log + "\n" );
    }

    public Principal() {
        initComponents();
        //inicializo el objeto arduino como lectura escritura
        try {
            ino.arduinoRXTX("COM3", 9600, listener);
        } catch (ArduinoException ex) {
            log("Error al conectar el dispositivo: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLOg = new javax.swing.JTextArea();
        jPanelConfig = new javax.swing.JPanel();
        jButtonConfiguracion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConfig = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jFormattedPasos = new javax.swing.JFormattedTextField();
        jFormattedHilos = new javax.swing.JFormattedTextField();
        jFormattedInicio = new javax.swing.JFormattedTextField();
        jFormattedCiclos = new javax.swing.JFormattedTextField();
        jFormattedPeine = new javax.swing.JFormattedTextField();
        jRadioButtonIZQ = new javax.swing.JRadioButton();
        jRadioButtonDER = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonEncender = new javax.swing.JButton();
        jButtonParar = new javax.swing.JButton();
        jButtonAvance = new javax.swing.JButton();
        jButtonRetro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Telar Automático");
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/telar.png"))); // NOI18N
        jLabel3.setText(" PENÉLOPE - TELAR AUTOMÁTICO : PANEL DE CONTROL");

        jTextAreaLOg.setEditable(false);
        jTextAreaLOg.setColumns(20);
        jTextAreaLOg.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jTextAreaLOg.setRows(5);
        jScrollPane1.setViewportView(jTextAreaLOg);

        jPanelConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuracion"));

        jButtonConfiguracion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/telar/config.png"))); // NOI18N
        jButtonConfiguracion.setText("CARGAR CONFIGURACION");
        jButtonConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfiguracionActionPerformed(evt);
            }
        });

        jTableConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Activo", "Cuadro 1", "Cuadro 2", "Cuadro 3", "Cuadro 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableConfig);
        if (jTableConfig.getColumnModel().getColumnCount() > 0) {
            jTableConfig.getColumnModel().getColumn(0).setResizable(false);
            jTableConfig.getColumnModel().getColumn(1).setResizable(false);
            jTableConfig.getColumnModel().getColumn(2).setResizable(false);
            jTableConfig.getColumnModel().getColumn(3).setResizable(false);
            jTableConfig.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("PASOS POR CM (MOTOR)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("HILOS POR CM");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("PASO DE INICIO");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("CICLOS");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("PEINE");

        jFormattedPasos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        jFormattedPasos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedPasos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedPasos.setValue(530);

        jFormattedHilos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jFormattedHilos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedHilos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedHilos.setValue(4);

        jFormattedInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedInicio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedInicio.setValue(1);

        jFormattedCiclos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedCiclos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedCiclos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedCiclos.setValue(0);

        jFormattedPeine.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jFormattedPeine.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedPeine.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jFormattedPeine.setValue(1);

        jRadioButtonIZQ.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonIZQ.setSelected(true);
        jRadioButtonIZQ.setText("IZQ");
        jRadioButtonIZQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIZQActionPerformed(evt);
            }
        });

        jRadioButtonDER.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonDER.setText("DER");
        jRadioButtonDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDERActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("POSICION NAVETA");

        javax.swing.GroupLayout jPanelConfigLayout = new javax.swing.GroupLayout(jPanelConfig);
        jPanelConfig.setLayout(jPanelConfigLayout);
        jPanelConfigLayout.setHorizontalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConfiguracion, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConfigLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConfigLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonIZQ)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButtonDER))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConfigLayout.createSequentialGroup()
                                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jFormattedInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jFormattedCiclos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jFormattedPeine, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30)))))
                        .addContainerGap())
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedPasos, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedHilos, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelConfigLayout.setVerticalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelConfigLayout.createSequentialGroup()
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedPasos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedHilos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jRadioButtonIZQ)
                                .addComponent(jRadioButtonDER))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedPeine, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jButtonConfiguracion, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));

        jButtonEncender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/startR.png"))); // NOI18N
        jButtonEncender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncenderActionPerformed(evt);
            }
        });

        jButtonParar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/stopR.png"))); // NOI18N
        jButtonParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPararActionPerformed(evt);
            }
        });

        jButtonAvance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/avance.png"))); // NOI18N
        jButtonAvance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAvanceActionPerformed(evt);
            }
        });

        jButtonRetro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/avance2.png"))); // NOI18N
        jButtonRetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonEncender, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonParar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonRetro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonAvance, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAvance, javax.swing.GroupLayout.PREFERRED_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButtonRetro, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEncender, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonParar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPararActionPerformed
        try {
            // TODO add your handling code here:
            log("Apagando equipo...");
            ino.sendData("AP");
            //sleep(2);
            //this.jButtonParar.setEnabled(false);
            //this.jButtonEncender.setEnabled(true);
            //this.jButtonAvance.setEnabled(true);
            //this.jButtonRetro.setEnabled(true);
            activaConfig();
        } catch (ArduinoException ex) {
            log("Error de Arduino: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error de Arduino: " + ex.toString());
        } catch (SerialPortException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error de Envío: " + ex.toString());
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Otro error: " + ex.toString());
        }
    }//GEN-LAST:event_jButtonPararActionPerformed

    private void jButtonEncenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncenderActionPerformed
        try {
            // TODO add your handling code here:
            log("Encendiendo equipo...");
            ino.sendData("EN");
            //this.jButtonParar.setEnabled(true);
            //this.jButtonEncender.setEnabled(false);
            //this.jButtonAvance.setEnabled(false);
            //this.jButtonRetro.setEnabled(false);
            desactivaConfig();
        } catch (ArduinoException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonEncenderActionPerformed

    private void jButtonConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfiguracionActionPerformed
        try {
            
 
            boolean valido = true;
            int pasos;
            float hilos;
            int inicio;
            int peine;
            int ciclos;
            int avance;

            String INST = "CF";
            String PASOS;
            String PEINE = "";
            String INICIO = "";
            String CICLOS = "";
            String CUADROS = "";
            String NAVETA = "0";

            //LEE PASOS
            pasos = Integer.parseInt(this.jFormattedPasos.getText());
            //LEE HILOS 
            hilos = Float.parseFloat(this.jFormattedHilos.getText());

            //CALCULA PASOS DE AVANCE
            avance = Math.round(pasos / hilos);

            //FORMATEA PASOS DE AVANCE
            if (avance < 10) {
                PASOS = "000" + Integer.toString(avance);
            } else if (avance < 100) {
                PASOS = "00" + Integer.toString(avance);
            } else if (avance < 1000) {
                PASOS = "0" + Integer.toString(avance);
            } else {
                PASOS = Integer.toString(avance);
            }

            //LEE CICLOS
            ciclos = Integer.parseInt(this.jFormattedCiclos.getText());
            if (ciclos < 10) {
                CICLOS = "00" + Integer.toString(ciclos);
            } else if (ciclos < 100) {
                CICLOS = "0" + Integer.toString(ciclos);
            } else {
                CICLOS = Integer.toString(ciclos);
            }

            //LEE PEINE
            peine = Integer.parseInt(this.jFormattedPeine.getText());
            PEINE = Integer.toString(peine);

            //LEE CONFIGURACION DE INICIO Y FORMATEA
            inicio = Integer.parseInt(this.jFormattedInicio.getText());
            if (inicio < 10) {
                INICIO = "0" + Integer.toString(inicio);
            } else {
                INICIO = Integer.toString(inicio);
            }
            
            //LEE POSICION DE NAVETA
            if (this.jRadioButtonDER.isSelected()) NAVETA = "1";

            //ARMO INSTRUCCION
            INST = INST + PASOS + PEINE + INICIO + CICLOS;

            int CantConf = 0;
            for (int i = 0; i < this.jTableConfig.getRowCount(); i++) {

                if (this.jTableConfig.getValueAt(i, 0) != null) {
                    if (this.jTableConfig.getValueAt(i, 0).equals(true)) {
                        CantConf++;
                        String valor = "";
                        if (this.jTableConfig.getValueAt(i, 1) == null) {
                            valor = valor + "0";
                        } else {
                            if (this.jTableConfig.getValueAt(i, 1).equals(false)) {
                                valor = valor + "0";
                            } else {
                                valor = valor + "1";
                            }
                        }

                        if (this.jTableConfig.getValueAt(i, 2) == null) {
                            valor = valor + "0";
                        } else {
                            if (this.jTableConfig.getValueAt(i, 2).equals(false)) {
                                valor = valor + "0";
                            } else {
                                valor = valor + "1";
                            }
                        }

                        if (this.jTableConfig.getValueAt(i, 3) == null) {
                            valor = valor + "0";
                        } else {
                            if (this.jTableConfig.getValueAt(i, 3).equals(false)) {
                                valor = valor + "0";
                            } else {
                                valor = valor + "1";
                            }
                        }

                        if (this.jTableConfig.getValueAt(i, 4) == null) {
                            valor = valor + "0";
                        } else {
                            if (this.jTableConfig.getValueAt(i, 4).equals(false)) {
                                valor = valor + "0";
                            } else {
                                valor = valor + "1";
                            }
                        }
                        //Convierto el valor binario del string en decimal
                        int valorDec = Integer.parseInt(valor, 2);
                        //paso el decimal a string
                        valor = Integer.toString(valorDec);
                        //si es menor que 10 le concateno un 0, sino lo tranformo a String
                        if (valorDec < 10) {
                            valor = "0" + valor;
                        }
                        //agrego el decimal en string a la instruccion
                        CUADROS = CUADROS + valor;
                    }
                }

            }
            //paso la cantidad de configuraciones a String
            String CANTCONF = Integer.toString(CantConf);
            //Si son menos de diez, le concateno un 0 adelante
            if (CantConf < 10) {
                CANTCONF = "0" + CANTCONF;
            }

            //completo con ceros los cuadros hasta llegar a 22
            for (int i = 0; i < (22 - CantConf); i++) {
                CUADROS = CUADROS + "00";
            }

            //agrego cantidad de configuraciones y cuadros
            INST = INST + CANTCONF + NAVETA+CUADROS;

            // TODO add your handling code here:
            //System.out.println(INST);
            ino.sendData(INST);
        

        } catch (ArduinoException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
           
        } catch (SerialPortException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
      
        } catch (Exception ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
      
        }
    }//GEN-LAST:event_jButtonConfiguracionActionPerformed

    private void jButtonAvanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAvanceActionPerformed
        
        String INST="AV";

        //LEE PASOS
        int pasos = Integer.parseInt(this.jFormattedPasos.getText());
        //LEE HILOS 
        int hilos = Integer.parseInt(this.jFormattedHilos.getText());

        //CALCULA PASOS DE AVANCE
        int avance = Math.round(pasos / hilos);
        
        String PASOS;

        //FORMATEA PASOS DE AVANCE
        if (avance < 10) {
            PASOS = "000" + Integer.toString(avance);
        } else if (avance < 100) {
            PASOS = "00" + Integer.toString(avance);
        } else if (avance < 1000) {
            PASOS = "0" + Integer.toString(avance);
        } else {
            PASOS = Integer.toString(avance);
        }
        
        INST = INST + PASOS;

        try{
            // TODO add your handling code here:
            //System.out.println(INST);
            ino.sendData(INST);

        } catch (ArduinoException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }catch (Exception e){
            log("Otro error: " + e.toString());
        }
    }//GEN-LAST:event_jButtonAvanceActionPerformed

    private void jButtonRetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetroActionPerformed
        String INST="RE";

        //LEE PASOS
        int pasos = Integer.parseInt(this.jFormattedPasos.getText());
        //LEE HILOS 
        int hilos = Integer.parseInt(this.jFormattedHilos.getText());

        //CALCULA PASOS DE AVANCE
        int avance = Math.round(pasos / hilos);
        
        String PASOS;

        //FORMATEA PASOS DE AVANCE
        if (avance < 10) {
            PASOS = "000" + Integer.toString(avance);
        } else if (avance < 100) {
            PASOS = "00" + Integer.toString(avance);
        } else if (avance < 1000) {
            PASOS = "0" + Integer.toString(avance);
        } else {
            PASOS = Integer.toString(avance);
        }
        
        INST = INST + PASOS;

        try{
            // TODO add your handling code here:
            //System.out.println(INST);
            ino.sendData(INST);

        } catch (ArduinoException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            log("Error de envío: " + ex.toString());
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonRetroActionPerformed

    private void jRadioButtonIZQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIZQActionPerformed
        // TODO add your handling code here:
        this.jRadioButtonIZQ.setSelected(true);
        this.jRadioButtonDER.setSelected(false);
    }//GEN-LAST:event_jRadioButtonIZQActionPerformed

    private void jRadioButtonDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDERActionPerformed
        // TODO add your handling code here:
        this.jRadioButtonIZQ.setSelected(false);
        this.jRadioButtonDER.setSelected(true);
    }//GEN-LAST:event_jRadioButtonDERActionPerformed

    public void desactivaConfig() {
        for (Component component : this.jPanelConfig.getComponents()) {
            component.setEnabled(false);
        }
        this.jTableConfig.setEnabled(false);
    }

    public void activaConfig() {
        for (Component component : this.jPanelConfig.getComponents()) {
            component.setEnabled(true);
        }
        this.jTableConfig.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAvance;
    private javax.swing.JButton jButtonConfiguracion;
    private javax.swing.JButton jButtonEncender;
    private javax.swing.JButton jButtonParar;
    private javax.swing.JButton jButtonRetro;
    private javax.swing.JFormattedTextField jFormattedCiclos;
    private javax.swing.JFormattedTextField jFormattedHilos;
    private javax.swing.JFormattedTextField jFormattedInicio;
    private javax.swing.JFormattedTextField jFormattedPasos;
    private javax.swing.JFormattedTextField jFormattedPeine;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelConfig;
    private javax.swing.JRadioButton jRadioButtonDER;
    private javax.swing.JRadioButton jRadioButtonIZQ;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableConfig;
    private javax.swing.JTextArea jTextAreaLOg;
    // End of variables declaration//GEN-END:variables
}
